{"ast":null,"code":"var _jsxFileName = \"/home/antoniya/user-account-managament-frontend/user-accounts-fe/src/components/UserAccountsTable/UserAccountsTable.js\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport './UserAccountsTable.css';\nimport axios from \"axios\";\nimport * as config from \"../../services/config\";\n\nclass UserAccountsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sortTableAscending = (userAccounts, criteria) => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return a[criteria].localeCompare(b[criteria]);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.sortTableDescending = (userAccounts, criteria) => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return b[criteria].localeCompare(a[criteria]);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.sortTableAscendingByDate = userAccounts => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return new Date(a.dateOfBirth) - new Date(b.dateOfBirth);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.sortTableDescendingByDate = userAccounts => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return new Date(b.dateOfBirth) - new Date(a.dateOfBirth);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.removeAccount = (accountId, userAccounts) => {\n      // let filteredArray = userAccounts.filter(a => a.id !== accountId)\n      // this.setState({\n      //     userAccounts: filteredArray\n      // });\n      //\n      // console.log(filteredArray)\n      //\n      // this.forceUpdate();\n      axios.delete(config.userAccountManagementBackendUrl + `\\\\${accountId}`).then(res => {});\n    };\n\n    this.state = {\n      userAccounts: []\n    };\n  }\n\n  render() {\n    const userAccounts = this.props.users;\n    return React.createElement(Table, {\n      id: \"userAccountsTable\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"First Name\", React.createElement(Button, {\n      onClick: () => this.sortTableAscending(userAccounts, \"firstName\"),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescending(userAccounts, \"firstName\"),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u2193\"), ' '), React.createElement(\"th\", {\n      className: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Last Name\", React.createElement(Button, {\n      onClick: () => this.sortTableAscending(userAccounts, \"lastName\"),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescending(userAccounts, \"lastName\"),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\u2193\"), ' '), React.createElement(\"th\", {\n      className: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Email\", React.createElement(Button, {\n      onClick: () => this.sortTableAscending(userAccounts, \"emailAddress\"),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescending(userAccounts, \"emailAddress\"),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\u2193\"), ' '), React.createElement(\"th\", {\n      className: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Date of Birth\", React.createElement(Button, {\n      onClick: () => this.sortTableAscendingByDate(userAccounts),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescendingByDate(userAccounts),\n      variant: \"outline-info\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u2191\"), ' '))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, userAccounts.map(account => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, account.firstName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, account.lastName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, account.emailAddress), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, account.dateOfBirth), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.removeAccount(account.id),\n      variant: \"outline-danger\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"x\"), ' ')))));\n  }\n\n}\n\n;\nexport default UserAccountsTable;","map":{"version":3,"sources":["/home/antoniya/user-account-managament-frontend/user-accounts-fe/src/components/UserAccountsTable/UserAccountsTable.js"],"names":["React","Table","Button","axios","config","UserAccountsTable","Component","constructor","props","sortTableAscending","userAccounts","criteria","sortedArray","sort","a","b","localeCompare","setState","sortTableDescending","sortTableAscendingByDate","Date","dateOfBirth","sortTableDescendingByDate","removeAccount","accountId","delete","userAccountManagementBackendUrl","then","res","state","render","users","map","account","firstName","lastName","emailAddress","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport './UserAccountsTable.css';\nimport axios from \"axios\";\nimport * as config from \"../../services/config\";\n\nclass UserAccountsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userAccounts: []\n        }\n    }\n\n    sortTableAscending = (userAccounts, criteria) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b) {\n            return a[criteria].localeCompare(b[criteria])\n        });\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    sortTableDescending = (userAccounts, criteria) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b) {\n            return b[criteria].localeCompare(a[criteria])\n        });\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    sortTableAscendingByDate = (userAccounts) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b) {\n            return new Date(a.dateOfBirth) - new Date(b.dateOfBirth)\n        });\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    sortTableDescendingByDate = (userAccounts) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b) {\n            return new Date(b.dateOfBirth) - new Date(a.dateOfBirth)\n        });\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    removeAccount = (accountId, userAccounts) => {\n        // let filteredArray = userAccounts.filter(a => a.id !== accountId)\n        // this.setState({\n        //     userAccounts: filteredArray\n        // });\n        //\n        // console.log(filteredArray)\n        //\n        // this.forceUpdate();\n        axios.delete(config.userAccountManagementBackendUrl + `\\\\${accountId}`)\n            .then(res => {\n\n            });\n    };\n\n    render() {\n        const userAccounts = this.props.users;\n        return (\n            <Table id=\"userAccountsTable\" striped bordered hover width=\"100%\">\n                <thead>\n                <tr>\n                    <th className=\"th-sm\">\n                        First Name\n                        <Button onClick={() => this.sortTableAscending(userAccounts, \"firstName\")}\n                                variant=\"outline-info\" size=\"sm\">&#8593;</Button>{' '}\n                        <Button onClick={() => this.sortTableDescending(userAccounts, \"firstName\")}\n                                variant=\"outline-info\" size=\"sm\">&#8595;</Button>{' '}\n                    </th>\n                    <th className=\"th-sm\">Last Name\n                        <Button onClick={() => this.sortTableAscending(userAccounts, \"lastName\")}\n                                variant=\"outline-info\" size=\"sm\">&#8593;</Button>{' '}\n                        <Button onClick={() => this.sortTableDescending(userAccounts, \"lastName\")}\n                                variant=\"outline-info\" size=\"sm\">&#8595;</Button>{' '}\n\n                    </th>\n                    <th className=\"th-sm\">Email\n                        <Button onClick={() => this.sortTableAscending(userAccounts, \"emailAddress\")}\n                                variant=\"outline-info\" size=\"sm\">&#8593;</Button>{' '}\n                        <Button onClick={() => this.sortTableDescending(userAccounts, \"emailAddress\")}\n                                variant=\"outline-info\" size=\"sm\">&#8595;</Button>{' '}\n                    </th>\n                    <th className=\"th-sm\">Date of Birth\n                        <Button onClick={() => this.sortTableAscendingByDate(userAccounts)}\n                                variant=\"outline-info\" size=\"sm\">&#8593;</Button>{' '}\n                        <Button onClick={() => this.sortTableDescendingByDate(userAccounts)}\n                                variant=\"outline-info\" size=\"sm\">&#8593;</Button>{' '}\n                    </th>\n                </tr>\n                </thead>\n\n                <tbody>\n                {userAccounts.map(account => (\n                    <tr>\n                        <td>{account.firstName}</td>\n                        <td>{account.lastName}</td>\n                        <td>{account.emailAddress}</td>\n                        <td>{account.dateOfBirth}</td>\n                        <td>\n                            <Button onClick={() => this.removeAccount(account.id)}\n                                    variant=\"outline-danger\" size=\"sm\">x</Button>{' '}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n\n            </Table>\n        )\n    }\n\n\n};\n\nexport default UserAccountsTable;"]},"metadata":{},"sourceType":"module"}