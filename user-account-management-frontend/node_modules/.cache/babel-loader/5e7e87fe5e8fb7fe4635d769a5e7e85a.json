{"ast":null,"code":"var _jsxFileName = \"/home/antoniya/user-account-managament-frontend/user-accounts-fe/src/components/UserAccountsTable.js\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nclass UserAccountsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sortTableAscending = (userAccounts, criteria) => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return a[criteria].localeCompare(b[criteria]);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.sortTableDescending = (userAccounts, criteria) => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return b[criteria].localeCompare(a[criteria]);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.sortTableAscendingByDate = userAccounts => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return new Date(a.dateOfBirth) - new Date(b.dateOfBirth);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.sortTableDescendingByDate = userAccounts => {\n      let sortedArray = userAccounts;\n      sortedArray.sort(function (a, b) {\n        return new Date(b.dateOfBirth) - new Date(a.dateOfBirth);\n      });\n      this.setState({\n        userAccounts: sortedArray\n      });\n    };\n\n    this.state = {\n      userAccounts: []\n    };\n  }\n\n  render() {\n    const userAccounts = this.props.users;\n    return React.createElement(Table, {\n      id: \"userAccountsTable\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      class: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      class: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"First Name\", React.createElement(Button, {\n      onClick: () => this.sortTableAscending(userAccounts, \"firstName\"),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescending(userAccounts, \"firstName\"),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u2193\"), ' '), React.createElement(\"th\", {\n      class: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Last Name\", React.createElement(Button, {\n      onClick: () => this.sortTableAscending(userAccounts, \"lastName\"),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescending(userAccounts, \"lastName\"),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u2193\"), ' '), React.createElement(\"th\", {\n      class: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Email\", React.createElement(Button, {\n      onClick: () => this.sortTableAscending(userAccounts, \"emailAddress\"),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescending(userAccounts, \"emailAddress\"),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u2193\"), ' '), React.createElement(\"th\", {\n      class: \"th-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Date of Birth\", React.createElement(Button, {\n      onClick: () => this.sortTableAscendingByDate(userAccounts),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u2191\"), ' ', React.createElement(Button, {\n      onClick: () => this.sortTableDescendingByDate(userAccounts),\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u2191\"), ' '))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, userAccounts.map(account => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, account.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, account.firstName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, account.lastName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, account.emailAddress), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, account.dateOfBirth)))));\n  }\n\n}\n\n;\nexport default UserAccountsTable;","map":{"version":3,"sources":["/home/antoniya/user-account-managament-frontend/user-accounts-fe/src/components/UserAccountsTable.js"],"names":["React","Table","Button","UserAccountsTable","Component","constructor","props","sortTableAscending","userAccounts","criteria","sortedArray","sort","a","b","localeCompare","setState","sortTableDescending","sortTableAscendingByDate","Date","dateOfBirth","sortTableDescendingByDate","state","render","users","map","account","id","firstName","lastName","emailAddress"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nclass UserAccountsTable extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userAccounts: []\n        }\n    }\n\n     sortTableAscending = (userAccounts, criteria) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b){return a[criteria].localeCompare(b[criteria])} );\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    sortTableDescending = (userAccounts, criteria) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b){return b[criteria].localeCompare(a[criteria])} );\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    sortTableAscendingByDate = (userAccounts) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b){return new Date(a.dateOfBirth) - new Date(b.dateOfBirth)} );\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    sortTableDescendingByDate = (userAccounts) => {\n        let sortedArray = userAccounts;\n        sortedArray.sort(function (a, b){return new Date(b.dateOfBirth) - new Date(a.dateOfBirth)} );\n        this.setState({\n            userAccounts: sortedArray,\n        })\n    };\n\n    render(){\n        const userAccounts = this.props.users;\n        return (\n            <Table id=\"userAccountsTable\" striped bordered hover width=\"100%\">\n                <thead>\n                <tr>\n                    <th class=\"th-sm\">#</th>\n                    <th class=\"th-sm\" >\n                        First Name\n                        <Button onClick={() => this.sortTableAscending(userAccounts, \"firstName\")} variant=\"outline-info\">&#8593;</Button>{' '}\n                        <Button onClick={() => this.sortTableDescending(userAccounts, \"firstName\")} variant=\"outline-info\">&#8595;</Button>{' '}\n                    </th>\n                    <th class=\"th-sm\">Last Name\n                        <Button onClick={() => this.sortTableAscending(userAccounts, \"lastName\")} variant=\"outline-info\">&#8593;</Button>{' '}\n                        <Button onClick={() => this.sortTableDescending(userAccounts, \"lastName\")} variant=\"outline-info\">&#8595;</Button>{' '}\n\n                    </th>\n                    <th class=\"th-sm\">Email\n                    <Button onClick={() => this.sortTableAscending(userAccounts, \"emailAddress\")} variant=\"outline-info\">&#8593;</Button>{' '}\n                    <Button onClick={() => this.sortTableDescending(userAccounts, \"emailAddress\")} variant=\"outline-info\">&#8595;</Button>{' '}\n                    </th>\n                    <th class=\"th-sm\">Date of Birth\n                    <Button onClick={() => this.sortTableAscendingByDate(userAccounts)} variant=\"outline-info\">&#8593;</Button>{' '}\n                    <Button onClick={() => this.sortTableDescendingByDate(userAccounts)} variant=\"outline-info\">&#8593;</Button>{' '}\n                    </th>\n                </tr>\n                </thead>\n\n                <tbody>\n                {userAccounts.map(account => (\n                    <tr>\n                        <td>{account.id}</td>\n                        <td>{account.firstName}</td>\n                        <td>{account.lastName}</td>\n                        <td>{account.emailAddress}</td>\n                        <td>{account.dateOfBirth}</td>\n                    </tr>\n                ))}\n                </tbody>\n\n            </Table>\n        )\n    }\n\n\n};\n\nexport default UserAccountsTable;"]},"metadata":{},"sourceType":"module"}